docker-compose up --build

=========================================
adding load balancer like 2 web intance :
version: '3.1'

services:
  web1:
    build: .
    ports:
      - "5001:5000"
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/dbname

  web2:
    build: .
    ports:
      - "5002:5000"
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/dbname

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: dbname
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web1
      - web2

volumes:
  db-data:
===============================================
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream flask {
        server web1:5000;
        server web2:5000;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://flask;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
==============================
Grafana query
rate(http_requests_total{job="flask"}[1m])
